{"id":1359360807,"question_id":493,"lang":"python","lang_name":"Python","time":"4 months, 2 weeks","timestamp":1723917098,"status":10,"status_display":"Accepted","runtime":"1843 ms","url":"/submissions/detail/1359360807/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"18.1 MB","code":"class Solution(object):\n    def reversePairs(self, nums):\n\n        return self.merge(nums, 0, len(nums)-1)\n\n    def merge(self, nums, low, high):\n        count = 0\n\n        if low >= high:\n            return count\n\n        mid = (low + high) // 2\n\n        count += self.merge(nums, low, mid)\n\n        count += self.merge(nums, mid+1, high)\n\n        count += self.count_pairs(nums, low, mid, high)\n\n        self.sort_array(nums, low, mid, high)\n\n        return count\n\n    \n    def sort_array(self, nums, low, mid, high):\n\n        temp = []\n\n        left = low\n\n        right = mid + 1\n\n        while left <= mid and right <= high:\n            if nums[left] <= nums[right]:\n                temp.append(nums[left])\n                left += 1\n            else:\n                temp.append(nums[right])\n                right += 1\n        \n        while left <= mid:\n            temp.append(nums[left])\n            left += 1\n        \n        while right <= high:\n            temp.append(nums[right])\n            right += 1\n\n        for i in range(low, high + 1):\n            nums[i] = temp[i - low]\n\n    \n    def count_pairs(self, nums, low, mid, high):\n        count = 0\n        right = mid+1\n\n        for i in range(low, mid +1):\n\n            while right <= high and  nums[i] > nums[right] *2:\n                right += 1\n            count += (right - (mid +1))\n        return count\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-pairs","has_notes":false,"flag_type":1}